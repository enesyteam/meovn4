MIN_LENGTH = 10
MAX_LENGTH = 14

PHONE_NUMBER_LENGTH = 7

COUNTRY_PREFIXES = ['0084', '084', '84']
MOBILE_THREE_DIGIT_PREFIXES = [
  '090'
  '091'
  '092'
  '093'
  '094'
  '095'
  '096'
  '097'
  '098'
  '099'
]

MOBILE_FOUR_DIGIT_PREFIXES = [
  '0120'
  '0121'
  '0122'
  '0123'
  '0124'
  '0125'
  '0126'
  '0127'
  '0128'
  '0129'
  '0162'
  '0163'
  '0164'
  '0165'
  '0166'
  '0167'
  '0168'
  '0169'
  '0186'
  '0188'
  '0199'
]



REDUDANT_CHARS = [
  '\\(', '\\)'    ## parentheses
  '\\-'          ## dashes
  '\\.'          ## dots
  '\\s'          ## spaces
  '\+'           ## plus
 ]

## regular expressions
REDUDANT_REGEX      = new RegExp "[#{ REDUDANT_CHARS.join '' }]", 'g'
NON_DIGIT_REGEX     = /\D/
COUNTRY_CODE_REGEX  = new RegExp "^(#{ COUNTRY_PREFIXES.join '|' })"

## api specific constants
FAILURE_RETURN = false
FAILURE_RETURN_NON_DIGIT = 'ERR_NON_DIGIT'
FAILURE_RETURN_MOBILE_PREFIX = 'ERR_PROVIDER'
FAILURE_RETURN_TOO_LONG = 'ERR_TOO_LONG'
FAILURE_RETURN_TOO_SHORT = 'ERR_TOO_SHORT'

module.exports = (originalPhoneNumber, mobileOnly=true)->

  phone = originalPhoneNumber
  ## [PROCESS] remove redudant characters
  phone = phone.replace REDUDANT_REGEX, ''

  ## [VALIDATE] length 10 < length < 13
  length = phone.length
  return FAILURE_RETURN_TOO_SHORT if length < MIN_LENGTH
  return FAILURE_RETURN_TOO_LONG if MAX_LENGTH < length

  ## [VALIDATE] digit only
  return FAILURE_RETURN_NON_DIGIT if NON_DIGIT_REGEX.test phone

  ## [PROCESS] remove country code
  phone = phone.replace COUNTRY_CODE_REGEX, ''

  ## [PROCESS] add leading 0
  phone = '0' + phone if phone[0] isnt '0'
  length = phone.length

  ## [PROCESS] get mobile prefix length
  if phone[0..3] in MOBILE_FOUR_DIGIT_PREFIXES
    mobilePrefixLength = 4
  else if phone[0..2] in MOBILE_THREE_DIGIT_PREFIXES
    mobilePrefixLength = 3
  else
    mobilePrefixLength = 0

  ## [VALIDATE] must have mobile prefix
  return FAILURE_RETURN_MOBILE_PREFIX if mobilePrefixLength is 0

  ## [VALIDATE] the rest of the phone must be 7 in length
  numberLength = length - mobilePrefixLength
  return FAILURE_RETURN_TOO_SHORT if numberLength < PHONE_NUMBER_LENGTH
  return FAILURE_RETURN_TOO_LONG if numberLength > PHONE_NUMBER_LENGTH

  return phone
