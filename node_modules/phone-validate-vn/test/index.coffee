require 'colors'
chai = require 'chai'
global.should = should = chai.should()
global.expect = expect = chai.expect


describe 'validatePhone(String phoneNumber, Boolean:isMobile=false)', ->
  tests = [
    {name: 'standard number', input: '0935357942', expected: '0935357942'}
    {name: 'number with leading +84', input: '+84935357942', expected: '0935357942'}
    {name: 'number with parentheses', input: '(084)0935357942', expected: '0935357942'}
    {name: 'number with spaces', input: '084 093 535 7942', expected: '0935357942'}
    {name: 'number with dashes', input: '093-535-7942', expected: '0935357942'}
    {name: 'number with dots', input: '093.535.7942', expected: '0935357942'}

    {name: 'number too long'.underline, input: '0931.535.7942.9876', expected: 'ERR_TOO_LONG'}
    {name: 'number too short'.underline, input: '093.535', expected: 'ERR_TOO_SHORT'}
    {name: 'number with invalid provider'.underline, input: '063.535.7942', expected: 'ERR_PROVIDER'}
    {name: 'number with alphabet'.underline, input: '090.FACEBOOK.COM', expected: 'ERR_NON_DIGIT'}
    {name: 'number with special characters'.underline, input: '090!12342#123', expected: 'ERR_NON_DIGIT'}
    {name: 'number with too long phone number length'.underline, input: '093.535.7942.987', expected: 'ERR_TOO_LONG'}
    {name: 'number with too short phone number length'.underline, input: '093.535.794', expected: 'ERR_TOO_SHORT'}
  ]

  validatePhone = require '../source/validator'

  tests.forEach (test)->
    fn = if test.only then it.only else it
    fn test.name + " (input=#{ test.input })".bold, ->
      input = test.input
      expected = test.expected
      output = validatePhone input
      expect(output).to.equal expected
